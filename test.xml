<project name="dma.cat.sync.test">
    <condition property="waitMilliseconds" value="2000" else="20">
        <os family="unix" />
    </condition>
 
    <target name="test" depends="build">
        <antcall target="test.init"/>

        <antcall target="test.run"/>
        <assertFileExists file="test.out/a1.txt"/>
        <assertFileExists file="test.out/a2.txt"/>
        <assertFileExists file="test.out/c.txt"/>
        <assertFileExists file="test.out/b"/>
        <assertFileExists file="test.out/b/b.txt"/>
        
        <delete file="test.in/a1.txt"/>
        <antcall target="test.run"/>
        <assertFileExists file="test.out/.deleted/a1.txt"/>
        <assertFileNotExists file="test.out/a1.txt"/>

        <delete file="test.out/a2.txt"/>
        <antcall target="test.run"/>
        <assertFileExists file="test.in/.deleted/a2.txt"/>
        <assertFileNotExists file="test.in/a2.txt"/>
        
        <delete dir="test.in/b"/>
        <antcall target="test.run"/>
        <assertFileNotExists file="test.out/b"/>
        
        <echo message="d" file="test.in/d.txt"/>
        <antcall target="test.run"/>
        <assertFileExists file="test.out/d.txt"/>
        
        <sleep milliseconds="${waitMilliseconds}"/>
        <echo message="d0" file="test.out/d.txt"/>
        <antcall target="test.run"/>
        <assertFileContains file="test.in/d.txt" content="d0"/>
        
        <mkdir dir="test.in/e"/>
        <mkdir dir="test.out/e"/>
        <echo message="e1" file="test.in/e/e1.txt"/>
        <echo message="e2" file="test.out/e/e2.txt"/>
        <antcall target="test.run"/>
        <assertFileExists file="test.out/e/e1.txt"/>
        <assertFileExists file="test.in/e/e2.txt"/>
        
        <echo message="f1" file="test.in/e/f1.txt"/>
        <antcall target="test.run"/>
        <assertFileExists file="test.out/e/f1.txt"/>

        <echo message="f2" file="test.out/e/f2.txt"/>
        <antcall target="test.run"/>
        <assertFileExists file="test.in/e/f2.txt"/>

        <echo message="d1" file="test.in/d.txt"/>
        <sleep milliseconds="${waitMilliseconds}"/>
        <echo message="d2" file="test.out/d.txt"/>
        <antcall target="test.run"/>
        <assertFileContains file="test.in/d.txt" content="d2"/>
        
        <sleep milliseconds="${waitMilliseconds}"/>
        <move file="test.in/d.txt" tofile="test.in/d2.txt"/>
        <antcall target="test.run"/>
        <assertFileExists file="test.in/d2.txt"/>
        <assertFileNotExists file="test.in/d.txt"/>
        
        <sleep milliseconds="${waitMilliseconds}"/>
        <move file="test.in/e" tofile="test.in/e2"/>
        <antcall target="test.run"/>
        <assertFileExists file="test.out/e2"/>
        <assertFileNotExists file="test.out/e"/>
        
        <sleep milliseconds="${waitMilliseconds}"/>
        <mkdir dir="test.out/e"/>
        <echo message="g" file="test.out/e/f"/>
        <antcall target="test.run"/>
        <assertFileExists file="test.in/e/f"/>

        <echo message="a2" file="test.in/a2.txt"/>
        <antcall target="test.run"/>
        <assertFileExists file="test.out/a2.txt"/>
    </target>
    
    <target name="test.init">
        <delete dir="test.out" />
        <delete dir="test.in" />
        <copy todir="test.in" preservelastmodified="true">
            <fileset dir="test" excludes="**/.backup"/>
        </copy>
        <mkdir dir="test.out"/>
    </target>
    
    <target name="test.run">
        <java classpath="classes" classname="dma.cat.sync.MainSync" failonerror="true">
            <arg value="test.in"/>
            <arg value="test.out"/>
        </java>
    </target>

    <macrodef name="assertFileExists">
        <attribute name="file"/>
        <sequential>
            <fail message="Missing file '@{file}'">
                <condition>
                    <not>
                        <available file="@{file}"/>
                    </not>
                </condition>
            </fail>
        </sequential>
    </macrodef>

    <macrodef name="assertFileNotExists">
        <attribute name="file"/>
        <sequential>
            <fail message="Existing file '@{file}'">
                <condition>
                    <available file="@{file}"/>
                </condition>
            </fail>
        </sequential>
    </macrodef>

    <macrodef name="assertFileContains">
        <attribute name="file"/>
        <attribute name="content"/>
        <sequential>
            <local name="contents"/>
            <loadfile property="contents" srcFile="@{file}"/>
            <fail message="Missing content '@{content}' in '@{file}'. Found '${contents}'">
                <condition>
                    <not>
                        <contains string="${contents}" substring="@{content}"/>
                    </not>
                </condition>
            </fail>
        </sequential>
    </macrodef>
</project>